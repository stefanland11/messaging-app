// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id                Int            @id @default(autoincrement())
  username          String         @unique
  password          String
  conversations     Conversation[]
  sentMessages      Message[]      @relation("SentMessages")
  receivedMessages  Message[]      @relation("ReceivedMessages")
  friends           Friend[]       @relation("Friends")
  friendsOf         Friend[]       @relation("FriendsOf")
  notifications     Notification[] @relation("UserNotifications")
  sentNotifications Notification[] @relation("SentNotifications")
}

model Friend {
  friend    User @relation("Friends", fields: [friendId], references: [id])
  friendId  Int
  friendOf   User @relation("FriendsOf", fields: [friendOfId], references: [id])
  friendOfId Int

  @@id([friendId, friendOfId])  
}

model Message {
  id             Int           @id @default(autoincrement())
  content        String
  sender         User          @relation("SentMessages", fields: [senderId], references: [id])
  senderId       Int
  recipient      User          @relation("ReceivedMessages", fields: [recipientId], references: [id])
  recipientId    Int
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  conversationId Int
  sentAt         DateTime      @default(now())
  status         MessageStatus @default(unread)
  readAt         DateTime?
}

enum MessageStatus {
  unread
  read
  archived
}

model Conversation {
  id       Int       @id @default(autoincrement())
  messages Message[]
  members  User[]
}

model Notification {
  id        Int              @id @default(autoincrement())
  user      User             @relation("UserNotifications", fields: [userId], references: [id])
  userId    Int
  type      NotificationType
  sentBy    User             @relation("SentNotifications", fields: [sentById], references: [id])
  sentById  Int
  isRead    Boolean          @default(false)
  createdAt DateTime         @default(now())

  @@unique([userId, sentById, type])
}

enum NotificationType {
  MESSAGE
  FRIEND_REQUEST
}
